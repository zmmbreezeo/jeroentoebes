# Copyright (c) 2013-2019 Huawei Technologies Co., Ltd. All rights reserved.
# Copyright (c) 2020-2021 Huawei Device Co., Ltd. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this list of
#    conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice, this list
#    of conditions and the following disclaimer in the documentation and/or other materials
#    provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its contributors may be used
#    to endorse or promote products derived from this software without specific prior written
#    permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

import("$root_out_dir/config.gni")

LITEOSTOPDIR = "//kernel/liteos_a"
LITEOSTHIRDPARTY = "//third_party"
HDFTOPDIR = "//drivers/adapter/khdf/liteos"

template("kernel_module") {
  current_dir_name = get_path_info(rebase_path("."), "file")
  if (target_name != current_dir_name) {
    build_gn = rebase_path("BUILD.gn")
    cmd = "if grep -q '^\s*group\s*(\s*\"$current_dir_name\"\s*)\s*{\s*\$' $build_gn; then echo true; else echo false; fi"
    has_current_dir_group = exec_script("//build/lite/run_shell_cmd.py", [ cmd ], "value")
    if (!has_current_dir_group) {
      module_name = target_name
      group(current_dir_name) {
        public_deps = [ ":$module_name" ]
      }
    }
  }
  if (defined(invoker.module_switch) && !invoker.module_switch) {
    group(target_name) {
      not_needed(invoker, "*")
    }
  } else {
    source_set(target_name) {
      forward_variables_from(invoker, "*")
    }
  }
}

template("config") {
  config(target_name) {
    if (defined(invoker.module_switch) && !invoker.module_switch && target_name == "public") {
      not_needed(invoker, "*")
      forward_variables_from(invoker, [ "configs" ])
    } else {
      forward_variables_from(invoker, "*")
    }
  }
}

set_defaults("kernel_module") {
  configs = [
    "$LITEOSTOPDIR:public",
    "$LITEOSTOPDIR:los_config",
  ]
}
