# Copyright (c) 2013-2019 Huawei Technologies Co., Ltd. All rights reserved.
# Copyright (c) 2020-2021 Huawei Device Co., Ltd. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this list of
#    conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice, this list
#    of conditions and the following disclaimer in the documentation and/or other materials
#    provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its contributors may be used
#    to endorse or promote products derived from this software without specific prior written
#    permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

import("//build/lite/config/test.gni")
import("../../config.gni")

unittest("liteos_a_pthread_unittest_door") {
  output_extension = "bin"
  output_dir = "$root_out_dir/test/unittest/kernel"
  include_dirs = [
    "../../common/include",
    "../../process/pthread",
  ]
  sources = [
    "../../common/osTest.cpp",
    "process_pthread_test.cpp",
  ]
  if (LOSCFG_USER_TEST_SMOKE == true) {
    sources_smoke = [
      "smoke/pthread_atfork_test_001.cpp",
      "smoke/pthread_atfork_test_002.cpp",
      "smoke/pthread_cond_test_001.cpp",
      "smoke/pthread_cond_test_002.cpp",
      "smoke/pthread_once_test_001.cpp",
      "smoke/pthread_test_001.cpp",
      "smoke/pthread_test_002.cpp",
      "smoke/pthread_test_003.cpp",
      "smoke/pthread_test_004.cpp",
      "smoke/pthread_test_005.cpp",
      "smoke/pthread_test_006.cpp",
      "smoke/pthread_test_007.cpp",
      "smoke/pthread_test_008.cpp",
      "smoke/pthread_test_009.cpp",
      "smoke/pthread_test_010.cpp",
      "smoke/pthread_test_011.cpp",
      "smoke/pthread_test_012.cpp",
      "smoke/pthread_test_013.cpp",
      "smoke/pthread_test_014.cpp",
      "smoke/pthread_test_015.cpp",
      "smoke/pthread_test_016.cpp",
      "smoke/pthread_test_017.cpp",
      "smoke/pthread_test_018.cpp",
      "smoke/pthread_test_019.cpp",
    ]
    sources += sources_smoke
  }
  deps = [ "//third_party/bounds_checking_function:libsec_shared" ]
  configs = [ "../..:public_config" ]
}
